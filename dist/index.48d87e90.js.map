{"mappings":"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","sources":["<anon>","scripts/main.js"],"sourcesContent":["(function () {\nvar $b1efc7bfc050c164$exports = {};\ngsap.registerPlugin(ScrollTrigger, ScrollToPlugin);\n// import gsap from \"https://cdn.skypack.dev/gsap\";\n//------------------------------------------------\n// Nav Menu Scroll-Into-View\n//------------------------------------------------\nfunction $b1efc7bfc050c164$var$anchorLinkHandler(e) {\n    const distanceToTop = (el)=>Math.floor(el.getBoundingClientRect().top);\n    e.preventDefault();\n    const targetID = this.getAttribute(\"href\");\n    const targetAnchor = document.querySelector(targetID);\n    if (!targetAnchor) return;\n    const originalTop = distanceToTop(targetAnchor);\n    window.scrollBy({\n        top: originalTop,\n        left: 0,\n        behavior: \"smooth\"\n    });\n    const checkIfDone = setInterval(()=>{\n        const atBottom = window.innerHeight + window.scrollY >= document.body.offsetHeight - 2;\n        if (distanceToTop(targetAnchor) === 0 || atBottom) {\n            targetAnchor.tabIndex = \"-1\";\n            targetAnchor.focus();\n            window.history.pushState(\"\", \"\", targetID);\n            clearInterval(checkIfDone);\n        }\n    }, 100);\n}\nconst $b1efc7bfc050c164$var$linksToAnchors = document.querySelectorAll('a[href^=\"#\"]');\n$b1efc7bfc050c164$var$linksToAnchors.forEach((each)=>each.onclick = $b1efc7bfc050c164$var$anchorLinkHandler);\n// // accessible scroll into view from https://codepen.io/a8t/pen/JOYwLM?editors=1010\n//------------------------------------------------\n// Nav & Background Box Scroll Behaviour\n//------------------------------------------------\n// enable scrollTrigger\ngsap.registerPlugin(ScrollTrigger);\n// nav bar shrink on scroll\nconst $b1efc7bfc050c164$var$bodyWidth = document.body.clientWidth;\nconst $b1efc7bfc050c164$var$navScroll = document.getElementById(\"navScroll\");\nconst $b1efc7bfc050c164$var$logoParts = document.querySelectorAll(\".logoBox\");\n// const logoBox2 = document.querySelector(\".logo2\");\n// const logoBox3 = document.querySelector(\".logo3\");\n// const logoBox4 = document.querySelector(\".logo4\");\n// const logoBox5 = document.querySelector(\".logo5\");\n// update if statements to use GSAP functionality when animating navbar on scroll\n// window.onscroll = () => {\n//   headerChange()\n// };\n// const headerChange = () => {\n//   if (bodyWidth < 667 && document.documentElement.scrollTop > 40) {\n//     navScroll.style.padding = \"20px 0 35px 0\";\n//   } else if (\n//     (bodyWidth > 768 && document.documentElement.scrollTop > 80)\n//   ) {\n//     navScroll.style.padding = \"50px 0 20px 0\";\n//   }\n// };\nconst $b1efc7bfc050c164$var$navReduce = gsap.to($b1efc7bfc050c164$var$navScroll, {\n    padding: \"15px 0\",\n    scrollTrigger: {\n        trigger: $b1efc7bfc050c164$var$navScroll,\n        // start: 'trigger viewport',\n        start: \"110px top\",\n        end: \"80px\",\n        // markers: true,\n        onUpdate: (self)=>{\n            self.direction === 1 ? $b1efc7bfc050c164$var$navReduce.play() : $b1efc7bfc050c164$var$navReduce.reverse();\n        },\n        duration: 0.125,\n        ease: \"power1.inOut\"\n    }\n});\nconst $b1efc7bfc050c164$var$logoResizer = gsap.utils.toArray(\".logoBox\").forEach((item)=>{\n    const logoResize = gsap.to(item, {\n        top: ()=>\"-=\" + (item.offsetTop - item.offsetHeight),\n        stagger: 0.25,\n        scrollTrigger: {\n            trigger: $b1efc7bfc050c164$var$navScroll,\n            // start: 'trigger viewport',\n            start: \"110px top\",\n            end: \"80px\",\n            onUpdate: (self)=>{\n                self.direction === 1 ? logoResize.play() : logoResize.reverse();\n            },\n            duration: 0.125,\n            ease: \"power1.inOut\"\n        }\n    });\n});\n//------------------------------------------------\n// Design Modal Functionality\n//------------------------------------------------\nconst $b1efc7bfc050c164$var$openButtons = document.querySelectorAll(\".modalOpen\");\nconst $b1efc7bfc050c164$var$closeButtons = document.querySelectorAll(\".modalClose\");\n// Open GSAP animation\nfunction $b1efc7bfc050c164$var$openModalAnimation(modal) {\n    const modalContent = modal.querySelector(\".modalSlideout\");\n    modal.style.display = \"flex\";\n    gsap.fromTo(modalContent, {\n        x: \"100%\"\n    }, {\n        duration: 0.5,\n        x: \"0%\",\n        ease: \"power2.out\"\n    });\n}\n// Close GSAP animation\nfunction $b1efc7bfc050c164$var$closeModalAnimation(modal) {\n    const modalContent = modal.querySelector(\".modalSlideout\");\n    gsap.to(modalContent, {\n        duration: 0.5,\n        x: \"100%\",\n        ease: \"power2.in\",\n        onComplete: ()=>{\n            modal.style.display = \"none\";\n        }\n    });\n}\n// Open event listener\n$b1efc7bfc050c164$var$openButtons.forEach((button)=>{\n    button.addEventListener(\"click\", ()=>{\n        const modalId = button.getAttribute(\"data-modal\");\n        const modal = document.getElementById(modalId);\n        $b1efc7bfc050c164$var$openModalAnimation(modal);\n    });\n});\n// Close event listener\n$b1efc7bfc050c164$var$closeButtons.forEach((button)=>{\n    button.addEventListener(\"click\", ()=>{\n        const modal = button.closest(\".modal\");\n        $b1efc7bfc050c164$var$closeModalAnimation(modal);\n    });\n});\n// Close modal if user clicks outside of the modal content\nwindow.addEventListener(\"click\", (e)=>{\n    const modals = document.querySelectorAll(\".modal\");\n    modals.forEach((modal)=>{\n        if (e.target === modal) $b1efc7bfc050c164$var$closeModalAnimation(modal);\n    });\n});\n//------------------------------------------------\n// Intro Description Updater\n//------------------------------------------------\n// use the span with the id of selfDesc to update with descriptions\n// time the descriptions to change every 2 seconds\n//get span element\n// const descSpan = document.getElementById('selfDesc');\n//store descriptions in an array\nconst $b1efc7bfc050c164$var$descriptions = [\n    \"_design\",\n    \"_develop\",\n    \"_seek\",\n    \"_collaborate\",\n    \"_ideate\",\n    \"_signal/lost\",\n    \"_>\",\n    \"_>>\",\n    \"_>>>\",\n    \"_signal/found\"\n];\n//randomize the description\n// const randDesc = Math.floor(Math.random() * descriptions.length);\n//a function that fills the span with random descriptions every 2.5 seconds\n// descFunction = () => {\n//     setInterval(() => {\n//     const randDesc = Math.floor(Math.random() * descriptions.length);\n//     document.getElementById('selfDesc').textContent = descriptions[randDesc];\n//     // console.log(descriptions[randDesc]);\n//   }, 2500);\n// }\n// descFunction();\n//code below adapted from https://cmsdk.com/javascript/change-backgroundimage-from-array-using-setinterval-but-only-twice.html\nconst $b1efc7bfc050c164$var$descSpan = document.getElementById(\"selfDesc\");\nlet $b1efc7bfc050c164$var$index = 0;\nlet $b1efc7bfc050c164$var$iterations = 0;\nconst $b1efc7bfc050c164$var$updateDesc = ()=>{\n    // reset index to zero if current index is greater than number of descriptions.\n    if ($b1efc7bfc050c164$var$index >= $b1efc7bfc050c164$var$descriptions.length) {\n        $b1efc7bfc050c164$var$index = 0;\n        $b1efc7bfc050c164$var$iterations++;\n    }\n    $b1efc7bfc050c164$var$descSpan.textContent = $b1efc7bfc050c164$var$descriptions[$b1efc7bfc050c164$var$index];\n    // need to clean this up and combine it into the above if statement.\n    if ($b1efc7bfc050c164$var$iterations === Infinity) $b1efc7bfc050c164$var$interval();\n    else $b1efc7bfc050c164$var$index++;\n};\n$b1efc7bfc050c164$var$updateDesc();\nconst $b1efc7bfc050c164$var$interval = setInterval($b1efc7bfc050c164$var$updateDesc, 1250);\n//------------------------------------------------\n// GSAP Portfolio Animations\n//------------------------------------------------\n// get all portfolio preview images (PPI) by class\n// add PPI to array\n// iterate over array adding GSAP animations to each\n// add event listener mouseenter to trigger animation\n// without GSAP utility classes\n// const portfolioList = document.querySelectorAll(\".portfolioCard\");\n// const portfolioArray = Array.from(portfolioList);\n// const arrayEvents = () => {\n//   portfolioArray.forEach((item) => {\n//     let hover = item.querySelectorAll(\".portfolioCardInfo\")\n//     let tl = gsap.timeline({paused: true});\n//     tl.from(hover, {\n//       bottom: \"102.5%\",\n//       ease: \"bounce.inOut\",\n//     });\n//     tl.to(hover, {\n//       duration: 0.75,\n//       bottom: 0,\n//       ease: \"back.inOut\"\n//     });\n//     tl.to(hover, {\n//       duration: 0.5,\n//       height: \"100%\",\n//       width: \"100%\",\n//       ease: \"power4.in\"\n//     });\n//     item.addEventListener(\"mouseenter\", () => tl.play(0));\n//   });\n// };\n// arrayEvents();\n// Using GSAP utilities\nconst $b1efc7bfc050c164$var$portfolioList = gsap.utils.toArray(\".portfolioCardContents\");\nconst $b1efc7bfc050c164$var$listEvents = ()=>{\n    $b1efc7bfc050c164$var$portfolioList.forEach((item)=>{\n        let hover = item.querySelectorAll(\".portfolioCardInfo\");\n        let info = item.querySelectorAll(\".portfolioCardDesc\");\n        let tl = gsap.timeline({\n            paused: true\n        });\n        tl.set(hover, {\n            top: \"0\",\n            left: \"0\",\n            height: \"16px\",\n            width: \"16px\"\n        });\n        tl.to(hover, {\n            duration: 0.35,\n            height: \"100%\",\n            width: \"100%\",\n            ease: \"power4.in\"\n        });\n        tl.to(info, {\n            duration: 0.01,\n            display: \"block\"\n        });\n        tl.to(info, {\n            duration: 0.15,\n            opacity: 1,\n            ease: \"power2.in\"\n        });\n        item.addEventListener(\"mouseenter\", ()=>tl.play());\n        item.addEventListener(\"mouseleave\", ()=>tl.reverse());\n    });\n};\nconst $b1efc7bfc050c164$var$portfolioReset = ()=>{\n    window.addEventListener(\"resize\", (event)=>{\n        if (event) $b1efc7bfc050c164$var$listEvents();\n    });\n};\n$b1efc7bfc050c164$var$listEvents();\n$b1efc7bfc050c164$var$portfolioReset();\n\n})();\n//# sourceMappingURL=index.48d87e90.js.map\n","gsap.registerPlugin(ScrollTrigger, ScrollToPlugin);\n\n// import gsap from \"https://cdn.skypack.dev/gsap\";\n\n//------------------------------------------------\n// Nav Menu Scroll-Into-View\n//------------------------------------------------\n\nfunction anchorLinkHandler(e) {\n  const distanceToTop = (el) => Math.floor(el.getBoundingClientRect().top);\n\n  e.preventDefault();\n  const targetID = this.getAttribute(\"href\");\n  const targetAnchor = document.querySelector(targetID);\n  if (!targetAnchor) return;\n  const originalTop = distanceToTop(targetAnchor);\n\n  window.scrollBy({ top: originalTop, left: 0, behavior: \"smooth\" });\n\n  const checkIfDone = setInterval(() => {\n    const atBottom =\n      window.innerHeight + window.scrollY >= document.body.offsetHeight - 2;\n    if (distanceToTop(targetAnchor) === 0 || atBottom) {\n      targetAnchor.tabIndex = \"-1\";\n      targetAnchor.focus();\n      window.history.pushState(\"\", \"\", targetID);\n      clearInterval(checkIfDone);\n    }\n  }, 100);\n}\n\nconst linksToAnchors = document.querySelectorAll('a[href^=\"#\"]');\n\nlinksToAnchors.forEach((each) => (each.onclick = anchorLinkHandler));\n\n// // accessible scroll into view from https://codepen.io/a8t/pen/JOYwLM?editors=1010\n\n//------------------------------------------------\n// Nav & Background Box Scroll Behaviour\n//------------------------------------------------\n\n// enable scrollTrigger\ngsap.registerPlugin(ScrollTrigger);\n\n// nav bar shrink on scroll\nconst bodyWidth = document.body.clientWidth;\nconst navScroll = document.getElementById(\"navScroll\");\nconst logoParts = document.querySelectorAll(\".logoBox\");\n// const logoBox2 = document.querySelector(\".logo2\");\n// const logoBox3 = document.querySelector(\".logo3\");\n// const logoBox4 = document.querySelector(\".logo4\");\n// const logoBox5 = document.querySelector(\".logo5\");\n\n// update if statements to use GSAP functionality when animating navbar on scroll\n\n// window.onscroll = () => {\n//   headerChange()\n\n// };\n// const headerChange = () => {\n//   if (bodyWidth < 667 && document.documentElement.scrollTop > 40) {\n//     navScroll.style.padding = \"20px 0 35px 0\";\n//   } else if (\n//     (bodyWidth > 768 && document.documentElement.scrollTop > 80)\n//   ) {\n//     navScroll.style.padding = \"50px 0 20px 0\";\n//   }\n// };\n\nconst navReduce = gsap.to(navScroll, {\n  padding: \"15px 0\",\n  scrollTrigger: {\n    trigger: navScroll,\n    // start: 'trigger viewport',\n    start: \"110px top\",\n    end: \"80px\",\n    // markers: true,\n    onUpdate: (self) => {\n      self.direction === 1 ? navReduce.play() : navReduce.reverse();\n    },\n    duration: 0.125,\n    ease: \"power1.inOut\",\n  },\n});\n\nconst logoResizer = gsap.utils.toArray(\".logoBox\").forEach((item) => {\n  const logoResize = gsap.to(item, {\n    top: () => \"-=\" + (item.offsetTop - item.offsetHeight),\n    stagger: 0.25,\n    scrollTrigger: {\n      trigger: navScroll,\n      // start: 'trigger viewport',\n      start: \"110px top\",\n      end: \"80px\",\n      onUpdate: (self) => {\n        self.direction === 1 ? logoResize.play() : logoResize.reverse();\n      },\n      duration: 0.125,\n      ease: \"power1.inOut\",\n    },\n  });\n});\n\n//------------------------------------------------\n// Design Modal Functionality\n//------------------------------------------------\n\nconst openButtons = document.querySelectorAll(\".modalOpen\");\nconst closeButtons = document.querySelectorAll(\".modalClose\");\n\n// Open GSAP animation\nfunction openModalAnimation(modal) {\n  const modalContent = modal.querySelector(\".modalSlideout\");\n  modal.style.display = \"flex\";\n  gsap.fromTo(\n    modalContent,\n    { x: \"100%\" },\n    {\n      duration: 0.5,\n      x: \"0%\",\n      ease: \"power2.out\",\n    }\n  );\n}\n\n// Close GSAP animation\nfunction closeModalAnimation(modal) {\n  const modalContent = modal.querySelector(\".modalSlideout\");\n  gsap.to(modalContent, {\n    duration: 0.5,\n    x: \"100%\",\n    ease: \"power2.in\",\n    onComplete: () => {\n      modal.style.display = \"none\";\n    },\n  });\n}\n\n// Open event listener\nopenButtons.forEach((button) => {\n  button.addEventListener(\"click\", () => {\n    const modalId = button.getAttribute(\"data-modal\");\n    const modal = document.getElementById(modalId);\n    openModalAnimation(modal);\n  });\n});\n\n// Close event listener\ncloseButtons.forEach((button) => {\n  button.addEventListener(\"click\", () => {\n    const modal = button.closest(\".modal\");\n    closeModalAnimation(modal);\n  });\n});\n\n// Close modal if user clicks outside of the modal content\nwindow.addEventListener(\"click\", (e) => {\n  const modals = document.querySelectorAll(\".modal\");\n  modals.forEach((modal) => {\n    if (e.target === modal) {\n      closeModalAnimation(modal);\n    }\n  });\n});\n\n//------------------------------------------------\n// Intro Description Updater\n//------------------------------------------------\n\n// use the span with the id of selfDesc to update with descriptions\n// time the descriptions to change every 2 seconds\n\n//get span element\n// const descSpan = document.getElementById('selfDesc');\n\n//store descriptions in an array\nconst descriptions = [\n  \"_design\",\n  \"_develop\",\n  \"_seek\",\n  \"_collaborate\",\n  \"_ideate\",\n  \"_signal/lost\",\n  \"_>\",\n  \"_>>\",\n  \"_>>>\",\n  \"_signal/found\",\n];\n\n//randomize the description\n// const randDesc = Math.floor(Math.random() * descriptions.length);\n\n//a function that fills the span with random descriptions every 2.5 seconds\n// descFunction = () => {\n//     setInterval(() => {\n//     const randDesc = Math.floor(Math.random() * descriptions.length);\n//     document.getElementById('selfDesc').textContent = descriptions[randDesc];\n//     // console.log(descriptions[randDesc]);\n//   }, 2500);\n// }\n\n// descFunction();\n\n//code below adapted from https://cmsdk.com/javascript/change-backgroundimage-from-array-using-setinterval-but-only-twice.html\n\nconst descSpan = document.getElementById(\"selfDesc\");\nlet index = 0;\nlet iterations = 0;\nconst updateDesc = () => {\n  // reset index to zero if current index is greater than number of descriptions.\n  if (index >= descriptions.length) {\n    index = 0;\n    iterations++;\n  }\n  descSpan.textContent = descriptions[index];\n\n  // need to clean this up and combine it into the above if statement.\n  if (iterations === Infinity) {\n    interval();\n  } else {\n    index++;\n  }\n};\n\nupdateDesc();\n\nconst interval = setInterval(updateDesc, 1250);\n\n//------------------------------------------------\n// GSAP Portfolio Animations\n//------------------------------------------------\n\n// get all portfolio preview images (PPI) by class\n// add PPI to array\n// iterate over array adding GSAP animations to each\n// add event listener mouseenter to trigger animation\n\n// without GSAP utility classes\n\n// const portfolioList = document.querySelectorAll(\".portfolioCard\");\n\n// const portfolioArray = Array.from(portfolioList);\n\n// const arrayEvents = () => {\n//   portfolioArray.forEach((item) => {\n//     let hover = item.querySelectorAll(\".portfolioCardInfo\")\n//     let tl = gsap.timeline({paused: true});\n\n//     tl.from(hover, {\n//       bottom: \"102.5%\",\n//       ease: \"bounce.inOut\",\n//     });\n//     tl.to(hover, {\n//       duration: 0.75,\n//       bottom: 0,\n//       ease: \"back.inOut\"\n//     });\n//     tl.to(hover, {\n//       duration: 0.5,\n//       height: \"100%\",\n//       width: \"100%\",\n//       ease: \"power4.in\"\n//     });\n\n//     item.addEventListener(\"mouseenter\", () => tl.play(0));\n//   });\n// };\n\n// arrayEvents();\n\n// Using GSAP utilities\n\nconst portfolioList = gsap.utils.toArray(\".portfolioCardContents\");\n\nconst listEvents = () => {\n  portfolioList.forEach((item) => {\n    let hover = item.querySelectorAll(\".portfolioCardInfo\");\n    let info = item.querySelectorAll(\".portfolioCardDesc\");\n    let tl = gsap.timeline({ paused: true });\n\n    tl.set(hover, {\n      top: \"0\",\n      left: \"0\",\n      height: \"16px\",\n      width: \"16px\",\n    });\n    tl.to(hover, {\n      duration: 0.35,\n      height: \"100%\",\n      width: \"100%\",\n      ease: \"power4.in\",\n    });\n    tl.to(info, {\n      duration: 0.01,\n      display: \"block\",\n    });\n    tl.to(info, {\n      duration: 0.15,\n      opacity: 1,\n      ease: \"power2.in\",\n    });\n\n    item.addEventListener(\"mouseenter\", () => tl.play());\n    item.addEventListener(\"mouseleave\", () => tl.reverse());\n  });\n};\n\nconst portfolioReset = () => {\n  window.addEventListener(\"resize\", (event) => {\n    if (event) {\n      listEvents();\n    }\n  });\n};\n\nlistEvents();\nportfolioReset();\n"],"names":["$b1efc7bfc050c164$var$anchorLinkHandler","e","distanceToTop","el","Math","floor","getBoundingClientRect","top","preventDefault","targetID","getAttribute","targetAnchor","document","querySelector","originalTop","window","scrollBy","left","behavior","checkIfDone","setInterval","atBottom","innerHeight","scrollY","body","offsetHeight","tabIndex","focus","history","pushState","clearInterval","gsap","registerPlugin","ScrollTrigger","ScrollToPlugin","$b1efc7bfc050c164$var$linksToAnchors","querySelectorAll","forEach","each","onclick","clientWidth","$b1efc7bfc050c164$var$navScroll","getElementById","$b1efc7bfc050c164$var$navReduce","to","padding","scrollTrigger","trigger","start","end","onUpdate","self","direction","play","reverse","duration","ease","utils","toArray","item","logoResize","offsetTop","stagger","$b1efc7bfc050c164$var$openButtons","$b1efc7bfc050c164$var$closeButtons","$b1efc7bfc050c164$var$closeModalAnimation","modal","modalContent","x","onComplete","style","display","button","addEventListener","modalId","$b1efc7bfc050c164$var$openModalAnimation","fromTo","closest","modals","target","$b1efc7bfc050c164$var$descriptions","$b1efc7bfc050c164$var$descSpan","$b1efc7bfc050c164$var$index","$b1efc7bfc050c164$var$iterations","$b1efc7bfc050c164$var$updateDesc","length","textContent","Infinity","$b1efc7bfc050c164$var$interval","$b1efc7bfc050c164$var$portfolioList","$b1efc7bfc050c164$var$listEvents","hover","info","tl","timeline","paused","set","height","width","opacity","event"],"version":3,"file":"index.48d87e90.js.map"}